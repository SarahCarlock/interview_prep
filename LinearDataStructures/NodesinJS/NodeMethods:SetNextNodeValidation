Node Methods: Set Next Node Validation
We arbitrarily set our next node to any argument that gets passed in. This can be problematic. Imagine if the next node accidentally gets set to a different data type, like a string. We run the risk of mistakenly confusing the string for a node, and we would have to build out special support to avoid traversing anything that is not a node.

To prevent these unnecessary complications, let’s add in a check that only allows arguments that are instanceof nodes or null. We want to allow null values as an argument in the event that we want to break the link between a node and its next node.

Instructions
Checkpoint 1 Passed
1.
Inside .setNextNode(), check if the node argument is an instanceof the Node class. If the argument is a Node or null, set this.next equal to node. Otherwise, throw an error.


Hint
When we check if a variable is an instanceof a class, it will evaluate to a boolean, like so:

const x = new String('this is a string');
// this will evaluate to true
if (x instanceof String || x === null) {
  console.log('x is a string!');
}

We can also throw an instance of an Error and pass it an informational message.

throw new Error('message');

Checkpoint 2 Passed
2.
We know that we can set the next node to another node, so let’s verify that .setNextNode() will not accept an argument that is not a node.

Call the .setNextNode() method on our Node instance and pass it any argument that is not a node. We expect to see an error in the terminal because you didn’t set the next node to a Node instance.


Hint
For the argument, you can choose anything, like a string, boolean, number, array, etc.




Node.js

class Node {
  constructor(data) {
    this.data = data;
    this.next = null;
  }

  setNextNode(node) {
    if (node instanceof Node || node === null) {
      this.next = node;
    } else {
    throw new Error('Next node must be a member of the Node class.');
    }
  } 
}

const firstNode = new Node('I am an instance of a Node!');
firstNode.setNextNode('A string, no node here!');

module.exports = Node;